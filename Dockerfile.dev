# Use an official Go image. Check Grafana's go.mod for the required version.
# Example: golang:1.21-bookworm
ARG GO_VERSION=1.24.2
FROM golang:${GO_VERSION}-bookworm

# Set working directory inside the container
WORKDIR /grafana

# Install build dependencies: git, make, C/C++ compiler, nodejs, yarn
# Check Grafana's .nvmrc or package.json for the required Node.js major version.
ARG NODE_MAJOR=18
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    git \
    make \
    build-essential \
    # Add NodeSource repository for specific Node.js version
    ca-certificates curl gnupg && \
    mkdir -p /etc/apt/keyrings && \
    curl -fsSL https://deb.nodesource.com/gpgkey/nodesource-repo.gpg.key | gpg --dearmor -o /etc/apt/keyrings/nodesource.gpg && \
    echo "deb [signed-by=/etc/apt/keyrings/nodesource.gpg] https://deb.nodesource.com/node_${NODE_MAJOR}.x nodistro main" | tee /etc/apt/sources.list.d/nodesource.list && \
    apt-get update && \
    apt-get install -y nodejs && \
    # Install Yarn globally
    npm install -g yarn && \
    # Clean up apt cache
    rm -rf /var/lib/apt/lists/*

# Set CGO_ENABLED=1 for building components like sqlite
ENV CGO_ENABLED=1

# This container is meant for interactive development.
# Keep it running. The actual Grafana source code will be mounted.
CMD [ "tail", "-f", "/dev/null" ]